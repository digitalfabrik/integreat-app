// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Headroom should render correct if state is pinned, transition 1`] = `
<Headroom
  height={100}
  pinStart={10}
  scrollHeight={50}
  stickyAncestor={<MockAncestor />}
>
  <div
    className="headroom transition"
    style={
      Object {
        "top": "0px",
        "transform": "translateY(0px)",
      }
    }
  >
    <MockNode>
      <div />
    </MockNode>
  </div>
  <MockAncestor
    stickyTop={100}
  >
    <div />
  </MockAncestor>
</Headroom>
`;

exports[`Headroom should render correct if state is static, no transition 1`] = `
<Headroom
  height={100}
  pinStart={10}
  scrollHeight={50}
  stickyAncestor={<MockAncestor />}
>
  <div
    className="headroom static"
    style={
      Object {
        "top": "-50px",
        "transform": "translateY(0px)",
      }
    }
  >
    <MockNode>
      <div />
    </MockNode>
  </div>
  <MockAncestor
    stickyTop={50}
  >
    <div />
  </MockAncestor>
</Headroom>
`;

exports[`Headroom should render correct if state is unpinned, no transition 1`] = `
<Headroom
  height={100}
  pinStart={10}
  scrollHeight={50}
  stickyAncestor={<MockAncestor />}
>
  <div
    className="headroom"
    style={
      Object {
        "top": "0px",
        "transform": "translateY(-50px)",
      }
    }
  >
    <MockNode>
      <div />
    </MockNode>
  </div>
  <MockAncestor
    stickyTop={50}
  >
    <div />
  </MockAncestor>
</Headroom>
`;

exports[`Headroom should render correct if state is unpinned, transition 1`] = `
<Headroom
  height={100}
  pinStart={10}
  scrollHeight={50}
  stickyAncestor={<MockAncestor />}
>
  <div
    className="headroom transition"
    style={
      Object {
        "top": "0px",
        "transform": "translateY(-50px)",
      }
    }
  >
    <MockNode>
      <div />
    </MockNode>
  </div>
  <MockAncestor
    stickyTop={50}
  >
    <div />
  </MockAncestor>
</Headroom>
`;

exports[`Headroom should render with no stickyAncestor supplied 1`] = `
<React.Fragment>
  <div
    className="headroom static"
    style={
      Object {
        "top": "-50px",
        "transform": "translateY(0px)",
      }
    }
  >
    <MockNode />
  </div>
</React.Fragment>
`;

exports[`Headroom should render with values from its state 1`] = `
<Headroom
  height={100}
  pinStart={0}
  scrollHeight={50}
  stickyAncestor={<MockAncestor />}
>
  <div
    className="headroom static"
    style={
      Object {
        "top": "-50px",
        "transform": "translateY(0px)",
      }
    }
  >
    <MockNode>
      <div />
    </MockNode>
  </div>
  <MockAncestor
    stickyTop={50}
  >
    <div />
  </MockAncestor>
</Headroom>
`;
