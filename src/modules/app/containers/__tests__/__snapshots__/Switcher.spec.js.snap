// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Switcher should get the right page if data has been fetched and is the categories route 1`] = `
<Connect(CategoriesPage)
  categories={
    CategoriesMapModel {
      "_categories": Map {
        "path01" => CategoryModel {
          "_availableLanguages": Map {},
          "_content": "contnentl",
          "_id": 1,
          "_lastUpdate": "2017-11-18T09:30:00.000Z",
          "_order": 4,
          "_parentPath": "parent/url",
          "_path": "path01",
          "_thumbnail": "thumb/nail",
          "_title": "Title10",
        },
      },
    }
  }
  cities={
    Array [
      CityModel {
        "_code": "city1",
        "_eventsEnabled": true,
        "_extrasEnabled": false,
        "_live": true,
        "_name": "Mambo No. 5",
        "_sortingName": "Mambo",
      },
    ]
  }
/>
`;

exports[`Switcher should get the right page if data has been fetched and is the disclaimer route 1`] = `
<Connect(DisclaimerPage)
  disclaimer={
    PageModel {
      "_content": "this is a test content",
      "_id": 1689,
      "_lastUpdate": "2017-11-18T09:30:00.000Z",
      "_title": "Feedback, Kontakt und mÃ¶gliches Engagement",
    }
  }
/>
`;

exports[`Switcher should get the right page if data has been fetched and is the events route 1`] = `
<Connect(Translate(EventsPage))
  events={
    Array [
      EventModel {
        "_availableLanguages": Map {
          "de" => "/augsburg/de/events/nulltes_event",
          "ar" => "/augsburg/ar/events/nulltes_event",
        },
        "_content": "Huiiii",
        "_date": DateModel {
          "_allDay": false,
          "_endDate": "1970-01-01T00:00:00.000Z",
          "_startDate": "1970-01-01T00:00:00.000Z",
        },
        "_excerpt": "Buuuuh",
        "_id": 1234,
        "_lastUpdate": "1970-01-01T00:00:00.000Z",
        "_location": LocationModel {
          "_address": "Adresse 0",
          "_latitude": undefined,
          "_longitude": undefined,
          "_postcode": "postcode",
          "_town": "Schloss Burgeck",
        },
        "_path": "/augsburg/en/events/nulltes_event",
        "_thumbnail": "Ich hab deine Nase!",
        "_title": "nulltes Event",
      },
    ]
  }
/>
`;

exports[`Switcher should get the right page if data has been fetched and is the extras route 1`] = `
<Connect(Translate(ExtrasPage))
  extras={
    Array [
      ExtraModel {
        "_alias": "ihk-lehrstellenboerse",
        "_path": "ihk-jobborese.com",
        "_postData": null,
        "_thumbnail": "xy",
        "_title": "Jobboerse",
      },
      ExtraModel {
        "_alias": "ihk-praktikumsboerse",
        "_path": "ihk-pratkitkumsboerse.com",
        "_postData": null,
        "_thumbnail": "xy",
        "_title": "Praktikumsboerse",
      },
    ]
  }
/>
`;

exports[`Switcher should get the right page if data has been fetched and is the i18nRedirect route 1`] = `
<Unknown
  cities={
    Array [
      CityModel {
        "_code": "city1",
        "_eventsEnabled": true,
        "_extrasEnabled": false,
        "_live": true,
        "_name": "Mambo No. 5",
        "_sortingName": "Mambo",
      },
    ]
  }
/>
`;

exports[`Switcher should get the right page if data has been fetched and is the landing route 1`] = `
<Connect(LandingPage)
  cities={
    Array [
      CityModel {
        "_code": "city1",
        "_eventsEnabled": true,
        "_extrasEnabled": false,
        "_live": true,
        "_name": "Mambo No. 5",
        "_sortingName": "Mambo",
      },
    ]
  }
/>
`;

exports[`Switcher should get the right page if data has been fetched and is the main disclaimer route 1`] = `<MainDisclaimerPage />`;

exports[`Switcher should get the right page if data has been fetched and is the pois route 1`] = `
<Connect(Translate(PoisPage))
  pois={
    Array [
      PoiModel {
        "_availableLanguages": Map {
          "de" => "/augsburg/de/locations/erster_poi",
          "ar" => "/augsburg/ar/locations/erster_poi",
        },
        "_content": "content",
        "_excerpt": "excerpt",
        "_id": 1,
        "_lastUpdate": "2016-01-07T09:36:24.000Z",
        "_location": LocationModel {
          "_address": "address",
          "_latitude": undefined,
          "_longitude": undefined,
          "_postcode": "postcode",
          "_town": "town",
        },
        "_path": "/augsburg/en/locations/first_poi",
        "_thumbnail": "thumbnail",
        "_title": "first Event",
      },
    ]
  }
/>
`;

exports[`Switcher should get the right page if data has been fetched and is the search route 1`] = `
<Connect(Translate(SearchPage))
  categories={
    CategoriesMapModel {
      "_categories": Map {
        "path01" => CategoryModel {
          "_availableLanguages": Map {},
          "_content": "contnentl",
          "_id": 1,
          "_lastUpdate": "2017-11-18T09:30:00.000Z",
          "_order": 4,
          "_parentPath": "parent/url",
          "_path": "path01",
          "_thumbnail": "thumb/nail",
          "_title": "Title10",
        },
      },
    }
  }
  cities={
    Array [
      CityModel {
        "_code": "city1",
        "_eventsEnabled": true,
        "_extrasEnabled": false,
        "_live": true,
        "_name": "Mambo No. 5",
        "_sortingName": "Mambo",
      },
    ]
  }
/>
`;

exports[`Switcher should get the right page if data has been fetched and is the sprungbrett route 1`] = `
<Translate(SprungbrettExtraPage)
  extras={
    Array [
      ExtraModel {
        "_alias": "ihk-lehrstellenboerse",
        "_path": "ihk-jobborese.com",
        "_postData": null,
        "_thumbnail": "xy",
        "_title": "Jobboerse",
      },
      ExtraModel {
        "_alias": "ihk-praktikumsboerse",
        "_path": "ihk-pratkitkumsboerse.com",
        "_postData": null,
        "_thumbnail": "xy",
        "_title": "Praktikumsboerse",
      },
    ]
  }
  sprungbrettJobs={
    Array [
      SprungbrettModel {
        "_id": 0,
        "_isApprenticeship": true,
        "_isEmployment": true,
        "_location": "Augsburg",
        "_title": "WebDeveloper",
        "_url": "http://awesome-jobs.domain",
      },
    ]
  }
/>
`;

exports[`Switcher should get the right page if data has been fetched and is the wohnen route 1`] = `
<Connect(Translate(WohnenExtraPage))
  extras={
    Array [
      ExtraModel {
        "_alias": "ihk-lehrstellenboerse",
        "_path": "ihk-jobborese.com",
        "_postData": null,
        "_thumbnail": "xy",
        "_title": "Jobboerse",
      },
      ExtraModel {
        "_alias": "ihk-praktikumsboerse",
        "_path": "ihk-pratkitkumsboerse.com",
        "_postData": null,
        "_thumbnail": "xy",
        "_title": "Praktikumsboerse",
      },
    ]
  }
  offers={
    Array [
      WohnenOfferModel {
        "_createdDate": "2018-07-24T00:00:00.000Z",
        "_email": "mail@mail.com",
        "_formData": WohnenFormData {
          "_accommodation": Object {
            "location": "Augsburg",
            "moveInDate": "2018-07-19T15:35:12.000Z",
            "ofRooms": Array [
              "kitchen",
              "child2",
              "child1",
              "bed",
            ],
            "ofRoomsDiff": Array [
              "bath",
              "wc",
              "child3",
              "livingroom",
              "hallway",
              "store",
              "basement",
              "balcony",
            ],
            "title": "Test Angebot",
            "totalArea": 120,
            "totalRooms": 4,
          },
          "_costs": Object {
            "additionalCosts": 200,
            "baseRent": 1000,
            "hotWaterInHeatingCosts": true,
            "ofAdditionalServices": Array [
              "garage",
            ],
            "ofAdditionalServicesDiff": Array [],
            "ofRunningServices": Array [
              "chimney",
              "other",
            ],
            "ofRunningServicesDiff": Array [
              "heating",
              "water",
              "garbage",
            ],
            "runningCosts": 1200,
          },
          "_landlord": Object {
            "firstName": "Max",
            "lastName": "Ammann",
            "phone": "",
          },
        },
      },
    ]
  }
/>
`;

exports[`Switcher should return a failure if there was an error during fetching 1`] = `
<Translate(FailureSwitcher)
  error={[Error: fake news]}
/>
`;

exports[`Switcher should return a spinner if the data has not been fetched yet 1`] = `<ForwardRef />`;
