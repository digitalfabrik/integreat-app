// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Switcher layout should render a layout with a footer if the current route is the landing route 1`] = `
<Layout
  asideStickyTop={0}
  darkMode={false}
  footer={<Translate(GeneralFooter) />}
  header={false}
>
  <Connect(Translate(LandingPage))
    cities={
      Array [
        CityModel {
          "_code": "city1",
          "_eventsEnabled": true,
          "_extrasEnabled": false,
          "_live": true,
          "_name": "Mambo No. 5",
          "_sortingName": "Mambo",
        },
      ]
    }
  />
</Layout>
`;

exports[`Switcher layout should render a layout with a header and a footer as default 1`] = `
<Layout
  asideStickyTop={0}
  darkMode={false}
  footer={<Translate(GeneralFooter) />}
  header={
    <GeneralHeader
      viewportSmall={false}
    />
  }
>
  <MainDisclaimerPage />
</Layout>
`;

exports[`Switcher layout should render a location layout if the current route is a location layout route 1`] = `
<Connect(LocationLayout)>
  <Connect(Translate(CategoriesPage))
    categories={
      CategoriesMapModel {
        "_categories": Map {
          "path01" => CategoryModel {
            "_availableLanguages": Map {},
            "_content": "contnentl",
            "_id": 1,
            "_lastUpdate": "2017-11-18T09:30:00.000Z",
            "_order": 4,
            "_parentPath": "parent/url",
            "_path": "path01",
            "_thumbnail": "thumb/nail",
            "_title": "Title10",
          },
        },
      }
    }
    cities={
      Array [
        CityModel {
          "_code": "city1",
          "_eventsEnabled": true,
          "_extrasEnabled": false,
          "_live": true,
          "_name": "Mambo No. 5",
          "_sortingName": "Mambo",
        },
      ]
    }
  />
</Connect(LocationLayout)>
`;

exports[`Switcher should get the right page if data has been fetched and is the categories route 1`] = `
<Connect(LocationLayout)>
  <Connect(Translate(CategoriesPage))
    categories={
      CategoriesMapModel {
        "_categories": Map {
          "path01" => CategoryModel {
            "_availableLanguages": Map {},
            "_content": "contnentl",
            "_id": 1,
            "_lastUpdate": "2017-11-18T09:30:00.000Z",
            "_order": 4,
            "_parentPath": "parent/url",
            "_path": "path01",
            "_thumbnail": "thumb/nail",
            "_title": "Title10",
          },
        },
      }
    }
    cities={
      Array [
        CityModel {
          "_code": "city1",
          "_eventsEnabled": true,
          "_extrasEnabled": false,
          "_live": true,
          "_name": "Mambo No. 5",
          "_sortingName": "Mambo",
        },
      ]
    }
  />
</Connect(LocationLayout)>
`;

exports[`Switcher should get the right page if data has been fetched and is the disclaimer route 1`] = `
<Connect(LocationLayout)>
  <Connect(Translate(DisclaimerPage))
    cities={
      Array [
        CityModel {
          "_code": "city1",
          "_eventsEnabled": true,
          "_extrasEnabled": false,
          "_live": true,
          "_name": "Mambo No. 5",
          "_sortingName": "Mambo",
        },
      ]
    }
    disclaimer={
      DisclaimerModel {
        "_content": "this is a test content",
        "_id": 1689,
        "_lastUpdate": "2017-11-18T09:30:00.000Z",
        "_title": "Feedback, Kontakt und mÃ¶gliches Engagement",
      }
    }
  />
</Connect(LocationLayout)>
`;

exports[`Switcher should get the right page if data has been fetched and is the events route 1`] = `
<Connect(LocationLayout)>
  <Connect(Translate(EventsPage))
    cities={
      Array [
        CityModel {
          "_code": "city1",
          "_eventsEnabled": true,
          "_extrasEnabled": false,
          "_live": true,
          "_name": "Mambo No. 5",
          "_sortingName": "Mambo",
        },
      ]
    }
    events={
      Array [
        EventModel {
          "_address": "address",
          "_allDay": true,
          "_availableLanguages": Map {
            "de" => 1235,
            "ar" => 1236,
          },
          "_content": "content",
          "_endDate": "2017-11-18T19:30:00.000Z",
          "_excerpt": "excerpt",
          "_id": 1234,
          "_startDate": "2017-11-18T09:30:00.000Z",
          "_thumbnail": "thumbnail",
          "_title": "first Event",
          "_town": "town",
        },
      ]
    }
  />
</Connect(LocationLayout)>
`;

exports[`Switcher should get the right page if data has been fetched and is the extras route 1`] = `
<Connect(LocationLayout)>
  <Connect(Translate(ExtrasPage))
    cities={
      Array [
        CityModel {
          "_code": "city1",
          "_eventsEnabled": true,
          "_extrasEnabled": false,
          "_live": true,
          "_name": "Mambo No. 5",
          "_sortingName": "Mambo",
        },
      ]
    }
    extras={
      Array [
        ExtraModel {
          "_alias": "ihk-lehrstellenboerse",
          "_path": "ihk-jobborese.com",
          "_postData": null,
          "_thumbnail": "xy",
          "_title": "Jobboerse",
        },
        ExtraModel {
          "_alias": "ihk-praktikumsboerse",
          "_path": "ihk-pratkitkumsboerse.com",
          "_postData": null,
          "_thumbnail": "xy",
          "_title": "Praktikumsboerse",
        },
      ]
    }
  />
</Connect(LocationLayout)>
`;

exports[`Switcher should get the right page if data has been fetched and is the i18nRedirect route 1`] = `
<Layout
  asideStickyTop={0}
  darkMode={false}
  footer={false}
  header={false}
>
  <Connect(I18nRedirectPage)
    cities={
      Array [
        CityModel {
          "_code": "city1",
          "_eventsEnabled": true,
          "_extrasEnabled": false,
          "_live": true,
          "_name": "Mambo No. 5",
          "_sortingName": "Mambo",
        },
      ]
    }
  />
</Layout>
`;

exports[`Switcher should get the right page if data has been fetched and is the landing route 1`] = `
<Layout
  asideStickyTop={0}
  darkMode={false}
  footer={<Translate(GeneralFooter) />}
  header={false}
>
  <Connect(Translate(LandingPage))
    cities={
      Array [
        CityModel {
          "_code": "city1",
          "_eventsEnabled": true,
          "_extrasEnabled": false,
          "_live": true,
          "_name": "Mambo No. 5",
          "_sortingName": "Mambo",
        },
      ]
    }
  />
</Layout>
`;

exports[`Switcher should get the right page if data has been fetched and is the main disclaimer route 1`] = `
<Layout
  asideStickyTop={0}
  darkMode={false}
  footer={<Translate(GeneralFooter) />}
  header={
    <GeneralHeader
      viewportSmall={false}
    />
  }
>
  <MainDisclaimerPage />
</Layout>
`;

exports[`Switcher should get the right page if data has been fetched and is the search route 1`] = `
<Connect(LocationLayout)>
  <Connect(Translate(SearchPage))
    categories={
      CategoriesMapModel {
        "_categories": Map {
          "path01" => CategoryModel {
            "_availableLanguages": Map {},
            "_content": "contnentl",
            "_id": 1,
            "_lastUpdate": "2017-11-18T09:30:00.000Z",
            "_order": 4,
            "_parentPath": "parent/url",
            "_path": "path01",
            "_thumbnail": "thumb/nail",
            "_title": "Title10",
          },
        },
      }
    }
    cities={
      Array [
        CityModel {
          "_code": "city1",
          "_eventsEnabled": true,
          "_extrasEnabled": false,
          "_live": true,
          "_name": "Mambo No. 5",
          "_sortingName": "Mambo",
        },
      ]
    }
  />
</Connect(LocationLayout)>
`;

exports[`Switcher should get the right page if data has been fetched and is the sprungbrett route 1`] = `
<Connect(LocationLayout)>
  <Connect(SprungbrettExtraPage)
    cities={
      Array [
        CityModel {
          "_code": "city1",
          "_eventsEnabled": true,
          "_extrasEnabled": false,
          "_live": true,
          "_name": "Mambo No. 5",
          "_sortingName": "Mambo",
        },
      ]
    }
    extras={
      Array [
        ExtraModel {
          "_alias": "ihk-lehrstellenboerse",
          "_path": "ihk-jobborese.com",
          "_postData": null,
          "_thumbnail": "xy",
          "_title": "Jobboerse",
        },
        ExtraModel {
          "_alias": "ihk-praktikumsboerse",
          "_path": "ihk-pratkitkumsboerse.com",
          "_postData": null,
          "_thumbnail": "xy",
          "_title": "Praktikumsboerse",
        },
      ]
    }
    sprungbrettJobs={
      Array [
        SprungbrettModel {
          "_id": 0,
          "_isApprenticeship": true,
          "_isEmployment": true,
          "_location": "Augsburg",
          "_title": "WebDeveloper",
          "_url": "http://awesome-jobs.domain",
        },
      ]
    }
  />
</Connect(LocationLayout)>
`;

exports[`Switcher should get the right page if data has been fetched and is the wohnen route 1`] = `
<Connect(LocationLayout)>
  <Connect(WohnenExtraPage)
    cities={
      Array [
        CityModel {
          "_code": "city1",
          "_eventsEnabled": true,
          "_extrasEnabled": false,
          "_live": true,
          "_name": "Mambo No. 5",
          "_sortingName": "Mambo",
        },
      ]
    }
    extras={
      Array [
        ExtraModel {
          "_alias": "ihk-lehrstellenboerse",
          "_path": "ihk-jobborese.com",
          "_postData": null,
          "_thumbnail": "xy",
          "_title": "Jobboerse",
        },
        ExtraModel {
          "_alias": "ihk-praktikumsboerse",
          "_path": "ihk-pratkitkumsboerse.com",
          "_postData": null,
          "_thumbnail": "xy",
          "_title": "Praktikumsboerse",
        },
      ]
    }
    offers={
      Array [
        WohnenOfferModel {
          "_createdDate": "2018-07-24T00:00:00.000Z",
          "_email": "mail@mail.com",
          "_formData": WohnenFormData {
            "_accommodation": Object {
              "location": "Augsburg",
              "moveInDate": "2018-07-19T15:35:12.000Z",
              "ofRooms": Array [
                "kitchen",
                "child2",
                "child1",
                "bed",
              ],
              "ofRoomsDiff": Array [
                "bath",
                "wc",
                "child3",
                "livingroom",
                "hallway",
                "store",
                "basement",
                "balcony",
              ],
              "title": "Test Angebot",
              "totalArea": 120,
              "totalRooms": 4,
            },
            "_costs": Object {
              "additionalCosts": 200,
              "baseRent": 1000,
              "hotWaterInHeatingCosts": true,
              "ofAdditionalServices": Array [
                "garage",
              ],
              "ofAdditionalServicesDiff": Array [],
              "ofRunningServices": Array [
                "chimney",
                "other",
              ],
              "ofRunningServicesDiff": Array [
                "heating",
                "water",
                "garbage",
              ],
              "runningCosts": 1200,
            },
            "_landlord": Object {
              "firstName": "Max",
              "lastName": "Ammann",
              "phone": "",
            },
          },
        },
      ]
    }
  />
</Connect(LocationLayout)>
`;

exports[`Switcher should return a failure if there was an error during fetching 1`] = `
<Translate(FailureSwitcher)
  error={[Error: fake news]}
/>
`;

exports[`Switcher should return a spinner if the data has not been fetched yet 1`] = `<WithTheme(LoadingSpinner) />`;
