// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LocationHeader ActionItems should match snapshot 1`] = `
Array [
  HeaderActionItem {
    "_href": "/augsburg/de/search",
    "_iconSrc": "test-file-stub",
    "_node": undefined,
    "_text": "search",
  },
  HeaderActionItem {
    "_href": "/landing/de",
    "_iconSrc": "test-file-stub",
    "_node": undefined,
    "_text": "changeLocation",
  },
  HeaderActionItem {
    "_href": undefined,
    "_iconSrc": undefined,
    "_node": <Translate(LanguageSelector)
      isHeaderActionItem={true}
      languageChangePaths={
        Array [
          Object {
            "code": "de",
            "name": "Deutsch",
            "path": "/augsburg/de",
          },
          Object {
            "code": "en",
            "name": "English",
            "path": "/augsburg/en",
          },
        ]
      }
      location={
        Object {
          "payload": Object {
            "city": "augsburg",
            "language": "de",
          },
          "type": "EXTRAS",
        }
      }
    />,
    "_text": undefined,
  },
]
`;

exports[`LocationHeader NavigationItems should be empty, if extras and news are both disabled 1`] = `Array []`;

exports[`LocationHeader NavigationItems should show categories, if extras or news are enabled 1`] = `
Array [
  <HeaderNavigationItem
    active={true}
    href="/augsburg/de/extras"
    selected={false}
    text="extras"
  />,
  <HeaderNavigationItem
    active={true}
    href="/augsburg/de"
    selected={true}
    text="categories"
  />,
]
`;

exports[`LocationHeader NavigationItems should show categories, if extras or news are enabled 2`] = `
Array [
  <HeaderNavigationItem
    active={true}
    href="/augsburg/de"
    selected={true}
    text="categories"
  />,
  <HeaderNavigationItem
    active={true}
    href="/augsburg/de/events"
    selected={false}
    text="news"
    tooltip="noNews"
  />,
]
`;

exports[`LocationHeader NavigationItems should show extras, categories, events in this order 1`] = `
Array [
  <HeaderNavigationItem
    active={true}
    href="/augsburg/de/extras"
    selected={false}
    text="extras"
  />,
  <HeaderNavigationItem
    active={true}
    href="/augsburg/de"
    selected={true}
    text="categories"
  />,
  <HeaderNavigationItem
    active={true}
    href="/augsburg/de/events"
    selected={false}
    text="news"
    tooltip="noNews"
  />,
]
`;

exports[`LocationHeader should match snapshot 1`] = `
<withPlatform(WithTheme(Header))
  actionItems={
    Array [
      HeaderActionItem {
        "_href": "/augsburg/de/search",
        "_iconSrc": "test-file-stub",
        "_node": undefined,
        "_text": "search",
      },
      HeaderActionItem {
        "_href": "/landing/de",
        "_iconSrc": "test-file-stub",
        "_node": undefined,
        "_text": "changeLocation",
      },
      HeaderActionItem {
        "_href": undefined,
        "_iconSrc": undefined,
        "_node": <Translate(LanguageSelector)
          isHeaderActionItem={true}
          languageChangePaths={
            Array [
              Object {
                "code": "de",
                "name": "Deutsch",
                "path": "/augsburg/de",
              },
              Object {
                "code": "en",
                "name": "English",
                "path": "/augsburg/en",
              },
            ]
          }
          location={
            Object {
              "payload": Object {
                "city": "augsburg",
                "language": "de",
              },
              "type": "EXTRAS",
            }
          }
        />,
        "_text": undefined,
      },
    ]
  }
  logoHref="/augsburg/de"
  navigationItems={
    Array [
      <HeaderNavigationItem
        active={true}
        href="/augsburg/de/extras"
        selected={true}
        text="extras"
      />,
      <HeaderNavigationItem
        active={true}
        href="/augsburg/de"
        selected={false}
        text="categories"
      />,
      <HeaderNavigationItem
        active={true}
        href="/augsburg/de/events"
        selected={false}
        text="news"
        tooltip="noNews"
      />,
    ]
  }
  onStickyTopChanged={[Function]}
  viewportSmall={true}
/>
`;
