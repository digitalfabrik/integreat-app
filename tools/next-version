#!/usr/bin/env node

const fs = require('fs')
const { program } = require('commander')

const VERSION_FILE = 'version.json'

program
  .option('-d, --debug', 'enable extreme logging')

const calculateNewVersion = () => {
  const versionFile = fs.readFileSync(VERSION_FILE)
  // versionCode is just used in the integreat-react-native-app
  const { versionName, versionCode } = JSON.parse(versionFile)
  const versionNameParts = versionName.split('.').map(it => parseInt(it))

  const date = new Date()
  const year = date.getFullYear()
  const month = (date.getMonth() + 1)

  const versionNameCounter = year === versionNameParts[0] && month === versionNameParts[1] ? versionNameParts[2] + 1 : 0
  const newVersionName = `${year}.${month}.${versionNameCounter}`
  const newVersionCode = versionCode ? versionCode + 1 : undefined

  console.warn(`New version name: ${newVersionName}`)
  if (newVersionCode) {
    console.warn(`New version name: ${newVersionCode}`)
  }

  return {
    versionName: newVersionName,
    versionCode: newVersionCode
  }
}

program
  .command('calc')
  .description('calculate the next version')
  .action(() => {
    try {
      const newVersion = calculateNewVersion()

      // Log stringified version to enable bash piping
      console.log(JSON.stringify(newVersion))
    } catch (e) {
      console.error(e)
      process.exit(1)
    }
  })

program.parse(process.argv)
