#!/bin/env bash
#
# ARG_POSITIONAL_SINGLE([package-name],[package name under which to release],[])
# ARG_POSITIONAL_SINGLE([version-name],[name of the version to release],[])
# ARG_POSITIONAL_SINGLE([version-code],[code of the version to release],[])
# ARG_POSITIONAL_SINGLE([sourcemap-directory],[relative path to the directory where the sourcemap is],[])
# ARG_HELP([This script creates a release in sentry. This file uses the configuration from ./.sentryclirc])
# ARGBASH_GO()
# needed because of Argbash --> m4_ignore([
### START OF CODE GENERATED BY Argbash v2.9.0 one line above ###
# Argbash is a bash code generator used to get arguments parsing right.
# Argbash is FREE SOFTWARE, see https://argbash.io for more info
# Generated online by https://argbash.io/generate


die()
{
	local _ret="${2:-1}"
	test "${_PRINT_HELP:-no}" = yes && print_help >&2
	echo "$1" >&2
	exit "${_ret}"
}


begins_with_short_option()
{
	local first_option all_short_options='h'
	first_option="${1:0:1}"
	test "$all_short_options" = "${all_short_options/$first_option/}" && return 1 || return 0
}

# THE DEFAULTS INITIALIZATION - POSITIONALS
_positionals=()
# THE DEFAULTS INITIALIZATION - OPTIONALS


print_help()
{
	printf '%s\n' "This script creates a release in sentry. This file uses the configuration from ./.sentryclirc"
	printf 'Usage: %s [-h|--help] <package-name> <version-name> <version-code> <sourcemap-directory>\n' "$0"
	printf '\t%s\n' "<package-name>: package name under which to release"
	printf '\t%s\n' "<version-name>: name of the version to release"
	printf '\t%s\n' "<version-code>: code of the version to release"
	printf '\t%s\n' "<sourcemap-directory>: relative path to the directory where the sourcemap is"
	printf '\t%s\n' "-h, --help: Prints help"
}


parse_commandline()
{
	_positionals_count=0
	while test $# -gt 0
	do
		_key="$1"
		case "$_key" in
			-h|--help)
				print_help
				exit 0
				;;
			-h*)
				print_help
				exit 0
				;;
			*)
				_last_positional="$1"
				_positionals+=("$_last_positional")
				_positionals_count=$((_positionals_count + 1))
				;;
		esac
		shift
	done
}


handle_passed_args_count()
{
	local _required_args_string="'package-name', 'version-name', 'version-code' and 'sourcemap-directory'"
	test "${_positionals_count}" -ge 4 || _PRINT_HELP=yes die "FATAL ERROR: Not enough positional arguments - we require exactly 4 (namely: $_required_args_string), but got only ${_positionals_count}." 1
	test "${_positionals_count}" -le 4 || _PRINT_HELP=yes die "FATAL ERROR: There were spurious positional arguments --- we expect exactly 4 (namely: $_required_args_string), but got ${_positionals_count} (the last one was: '${_last_positional}')." 1
}


assign_positional_args()
{
	local _positional_name _shift_for=$1
	_positional_names="_arg_package_name _arg_version_name _arg_version_code _arg_sourcemap_directory "

	shift "$_shift_for"
	for _positional_name in ${_positional_names}
	do
		test $# -gt 0 || break
		eval "$_positional_name=\${1}" || die "Error during argument parsing, possibly an Argbash bug." 1
		shift
	done
}

parse_commandline "$@"
handle_passed_args_count
assign_positional_args 1 "${_positionals[@]}"

# OTHER STUFF GENERATED BY Argbash

### END OF CODE GENERATED BY Argbash (sortof) ### ])
# [ <-- needed because of Argbash

set -e
shopt -s nullglob

if ! command -v sentry-cli &> /dev/null
then
  curl -sL https://sentry.io/get-cli/ | bash
fi

package_name=$_arg_package_name
version_name=$_arg_version_name
version_code=$_arg_version_code
sourcemap_directory=$_arg_sourcemap_directory

sourcemap_paths=($sourcemap_directory/*.js.map)

if [ ${#sourcemap_paths[@]} -eq 0 ]
then
  echo "There are no sourcemaps in $sourcemap_directory. Exiting."
  exit 0
fi

if [ -z "$SENTRY_AUTH_TOKEN" ]
then
  echo "SENTRY_AUTH_TOKEN is not set"
  exit 1
fi

version="${package_name}@${version_name}+${version_code}"

sentry-cli releases new $version --finalize

for sourcemap_path in "${sourcemap_paths[@]}"; do 
  sentry-cli releases files $version upload-sourcemaps $sourcemap_path --rewrite --dist $version_code
done

# ] <-- needed because of Argbash
