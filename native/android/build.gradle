import org.apache.tools.ant.taskdefs.condition.Os

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        kotlinVersion = "1.8.0"
        buildToolsVersion = "33.0.0"
        minSdkVersion = 21
        compileSdkVersion = 33
        targetSdkVersion = 33
        // We use NDK 23 which has both M1 support and is the side-by-side NDK version from AGP.
        ndkVersion = "23.1.7779620"
        // stick to browser 1.4.0 until we upgrade to SDK 33 https://stackoverflow.com/questions/69208613/getting-error-while-running-react-native-app
        androidXBrowser = "1.4.0"

        // Config for MapLibre
        rnmbglMapboxLibs = {
            implementation("org.maplibre.gl:android-sdk:9.2.1")
            implementation ("com.mapbox.mapboxsdk:mapbox-sdk-turf:5.8.0")
        }
        rnmbglMapboxPlugins = {
            implementation("com.mapbox.mapboxsdk:mapbox-android-gestures:0.7.0")
            implementation("com.mapbox.mapboxsdk:mapbox-android-plugin-localization-v9:0.12.0") {
                exclude group: 'com.mapbox.mapboxsdk', module: 'mapbox-android-sdk'
            }
            implementation("com.mapbox.mapboxsdk:mapbox-android-plugin-annotation-v9:0.8.0") {
                exclude group: 'com.mapbox.mapboxsdk', module: 'mapbox-android-sdk'
            }
            implementation("com.mapbox.mapboxsdk:mapbox-android-plugin-markerview-v9:0.4.0") {
                exclude group: 'com.mapbox.mapboxsdk', module: 'mapbox-android-sdk'
            }
        }
    }
    repositories {
        google()
        mavenCentral()
        jcenter()
        maven {
            url = "https://dl.bintray.com/maplibre/maplibre-gl-native"
        }
    }
    dependencies {
        classpath("com.android.tools.build:gradle:7.3.1")
        classpath("com.facebook.react:react-native-gradle-plugin")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

task downloadDependencies() {
    description 'Download all dependencies to the Gradle cache'
    doLast {
        configurations.findAll().each { config ->
            if (config.name.contains("minReactNative") && config.canBeResolved) {
                print config.name
                print '\n'
                config.files
            }
        }
    }
}

subprojects {
    afterEvaluate {
        if (getPlugins().hasPlugin('android') ||
                getPlugins().hasPlugin('android-library')) {

            configure(android.lintOptions) {
                abortOnError false
            }
        }
    }
}
