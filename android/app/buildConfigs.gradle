// See https://github.com/luggit/react-native-config/blob/master/android/dotenv.gradle for reference

def createConfig () {
    def buildConfig = [:]

    if (!System.env["BUILD_CONFIG_NAME"]) {
        println("*****************++++++++*********")
        println("*** Missing BUILD_CONFIG_NAME ****")
        println("************************++++++++**")

        // Set to empty array to prevent failing for other tasks
        project.ext.set("buildConfig", buildConfig)

        return
    }

    def buildConfigName = System.env['BUILD_CONFIG_NAME']
    println("Using build config $buildConfigName")

    def command = "yarn babel-node tools/create-xcconfigs config $buildConfigName --directory android"
    def proc = command.execute()
    proc.waitFor()

    if (proc.exitValue() != 0) {
        println("Failed to create xcconfig file: $proc.err.text")
        return
    }
    println("Created xcconfg file: $proc.in.text")


    File f = new File("$project.rootDir/buildConfig.tmp.xcconfig");

    f.eachLine { line ->
        def parts = line.split(" = ")
        buildConfig.put(parts[0], parts[1])
    }

    println("Build config: $buildConfig")
    project.ext.set("buildConfig", buildConfig)
}

createConfig()

android {
    defaultConfig {
        // TODO Add application id to build configs and throw if not found
        applicationId project.buildConfig.getOrDefault("BUILD_CONFIG_APPLICTION_ID", "tuerantuer.app.integreat")
        project.buildConfig.each { k, v ->
            def escaped = v.replaceAll("%","\\\\u0025")
            // Make build config values available as string resource, e.g. for use in AndroidManifest
            resValue "string", k, "\"$escaped\""
        }
    }
}