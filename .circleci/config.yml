version: 2.1

orbs:
  slack: circleci/slack@3.4.2

parameters:
  api_triggered:
    type: boolean
    description: Whether the pipeline was triggered through the CircleCi API (https://circleci.com/docs/api/v2/?shell#trigger-a-new-pipeline).
    default: false
  production_delivery:
    type: boolean
    description: Whether to deliver to production (integreat.app and malteapp.de) or not (webnext.integreat-app.de and webnext.malteapp.de).
    default: false

workflows:
  version: 2
  commit: # Builds every commit. Delivers to webnext.integreat.app and webnext.malteapp.de on develop.
    unless: << pipeline.parameters.api_triggered >>
    jobs:
      - build
      - deliver:
          filters:
            branches:
              only:
                - develop
          production_delivery: false
          requires:
            - build

  api_triggered_production_delivery: # Workflow for manual delivery to integreat.app and malteapp.de which also bumps the version, moves the release notes, ...
    when:
      and:
        - << pipeline.parameters.api_triggered >>
        - << pipeline.parameters.production_delivery >>
    jobs:
      - build
      - prepare_production_delivery:
          requires:
            - build
      - deliver:
          production_delivery: true
          requires:
            - prepare_production_delivery

  api_triggered_debug_delivery: # Workflow for manual delivery to webnext.integreat.app and webnext.malteapp.de
    when:
      and:
        - << pipeline.parameters.api_triggered >>
        - not: << pipeline.parameters.production_delivery >>
    jobs:
      - build
      - deliver:
          production_delivery: false
          requires:
            - build

  bi_weekly_prduction_delivery:
    triggers:
      - schedule:
          cron: "0 5 1,15 * *" # For sanity checks for this syntax: https://crontab.guru/
          filters:
            branches:
              only:
                - develop
    jobs:
      - build
      - prepare_production_delivery:
          requires:
            - build
      - await_approval:
          type: approval
          requires:
            - prepare_production_delivery
      - deliver:
          production_delivery: true
          requires:
            - await_approval

jobs:
  build:
    parameters:
    docker:
      - image: circleci/node:12.16.3
    resource_class: small
    environment:
      TOTAL_CPUS: 1 # For resource_class small
      TZ: "Europe/Berlin" # Should be removed in WEBAPP-463
    shell: /bin/bash -eo pipefail
    steps:
      - run:
          name: "Show current CPU count"
          command: echo "CPU count is ${TOTAL_CPUS}"
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - 2-yarn-{{ arch }}-{{ checksum "yarn.lock" }}
            - 2-yarn-{{ arch }}-
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: 2-yarn-{{ arch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - node_modules
      - run:
          name: Check linting
          command: yarn run lint
      - run:
          name: Check flow
          command: yarn run flow:check-now --max-workers ${TOTAL_CPUS}
      - run:
          name: Unit tests
          command: yarn run test --ci --maxWorkers ${TOTAL_CPUS}
      - run:
          name: Test coverage # Results are not used right now. Run it anyway to (possibly) discover more problems.
          command: yarn run test:coverage --ci --maxWorkers ${TOTAL_CPUS}
      - run:
          name: Debug integreat-test-cms build
          command: yarn build:integreat-test-cms
      - run:
          name: Production integreat build
          command: yarn build:integreat
      - run:
          name: Production malte build
          command: yarn build:malte
      - run:
          name: Check build
          command: yarn run check:build
      - store_artifacts:
          path: dist
      - persist_to_workspace:
          root: ./
          paths:
            - dist
            - node_modules

  prepare_production_delivery: # Move release notes, bump version and tag commit
    docker:
      - image: circleci/node:12.16.3
    resource_class: small
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Calculate next version
          command: echo "export NEW_VERSION_NAME=$(tools/next-version calc | jq .versionName)" >> ${BASH_ENV}
      - run:
          name: Create jira release # The jira project has to have the same name as the github project. Otherwise this has to be configured.
          command: tools/create-jira-release create-release ${NEW_VERSION_NAME} --private-key ${JIRA_PRIVATE_KEY} --access-token ${JIRA_OAUTH_TOKEN} --consumer-key ${JIRA_CONSUMER_KEY} --projectName ${CIRCLE_PROJECT_REPONAME}
      - run:
          name: Move release notes
          command: tools/move-release-notes move-to ${NEW_VERSION_NAME} --deliverino-private-key ${DELIVERINO_PRIVATE_KEY} --owner ${CIRCLE_PROJECT_USERNAME} --repo ${CIRCLE_PROJECT_REPONAME} --branch ${CIRCLE_BRANCH} --commit-sha ${CIRCLE_SHA1}
      - run:
          name: Bump version
          command: tools/bump-version bump-to ${NEW_VERSION_NAME} --deliverino-private-key ${DELIVERINO_PRIVATE_KEY} --owner ${CIRCLE_PROJECT_USERNAME} --repo ${CIRCLE_PROJECT_REPONAME} --branch ${CIRCLE_BRANCH}

  deliver:
    parameters:
      production_delivery:
        description: Whether to deliver to production (integreat.app and malteapp.de) or not (webnext.integreat.app and webnext.malteapp.de).
        type: boolean
    docker:
      - image: circleci/node:12.16.3
    resource_class: small
    shell: /bin/bash -eo pipefail
    steps:
      - add_ssh_keys:
          fingerprints:
            - "30:f4:98:9f:1c:72:d1:c0:17:9f:57:05:74:a6:44:50"
      - attach_workspace:
          at: /tmp/output
      - when:
          condition:
            << parameters.production_delivery >>
          steps:
            - run:
                name: Integreat production delivery # StrictHostKeyChecking=no is not a security problem. The worst that could happen is a delivery to the wrong domain.
                command: sftp -v -o StrictHostKeyChecking=no web@web.integreat-app.de:/integreat.app \<<< $'put -r /tmp/output/dist/integreat/*'
            - run:
                name: Malte production delivery
                command: sftp -v -o StrictHostKeyChecking=no web@web.integreat-app.de:/malteapp.de \<<< $'put -r /tmp/output/dist/malte/*'
            - slack/notify:
                message: WebApp version ${NEW_VERSION_NAME} was delivered successfully to integreat.app and malteapp.de!
                webhook: ${SLACK_URL}
      - unless:
          condition:
            << parameters.production_delivery >>
          steps:
            - run:
                name: Integreat debug delivery
                command: sftp -v -o StrictHostKeyChecking=no web@web.integreat-app.de:/webnext.integreat.app \<<< $'put -r /tmp/output/dist/integreat-test-cms/*'
            - run:
                name: Malte debug delivery
                command: sftp -v -o StrictHostKeyChecking=no web@web.integreat-app.de:/webnext.malteapp.de \<<< $'put -r /tmp/output/dist/malte/*'
