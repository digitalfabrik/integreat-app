version: 2.1

orbs:
  slack: circleci/slack@3.4.2

parameters:
  api_triggered:
    type: boolean
    description: Whether the pipeline was triggered through the CircleCi API (https://circleci.com/docs/api/v2/?shell#trigger-a-new-pipeline).
    default: false
  build_config:
    type: enum
    description: Which build config to use and where to deploy to.
    enum: ["integreat", "integreat-test-cms"]
    default: "integreat-test-cms"

workflows:
  version: 2
  commit: # Builds every commit. Delivers to webnext on develop.
    unless: << pipeline.parameters.api_triggered >>
    jobs:
      - build:
          build_config: "integreat-test-cms"
      - deliver:
          filters:
            branches:
              only:
                - develop
          deliver_to: "integreat-test-cms"
          requires:
            - build

  api-triggered-integreat-delivery: # Workflow for manual delivery of integreat which also bumps the version, moves the release notes, ...
    when:
      and:
        - << pipeline.parameters.api_triggered >>
        - equal: [ "integreat", << pipeline.parameters.build_config >> ]
    jobs:
      - build:
          build_config: << pipeline.parameters.build_config >>
      - prepare-integreat-delivery:
          requires:
            - build
      - deliver:
          deliver_to: << pipeline.parameters.build_config >>
          requires:
            - build
            - prepare-integreat-delivery

  api-triggered-delivery: # Workflow for manual delivery of integreat-test-cms and malte
    when:
      and:
        - << pipeline.parameters.api_triggered >>
        - not:
          equal: [ "integreat", << pipeline.parameters.build_config >> ]
    jobs:
      - build:
          build_config: << pipeline.parameters.build_config >>
      - deliver:
          deliver_to: << pipeline.parameters.build_config >>
          requires:
            - build

  bi-weekly-integreat-delivery:
    triggers:
      - schedule:
          cron: "0 5 1,15 * *" # For sanity checks for this syntax: https://crontab.guru/
          filters:
            branches:
              only:
                - develop
    jobs:
      - build:
          build_config: "integreat"
      - prepare-integreat-delivery:
          requires:
            - build
      - await-approval:
          type: approval
          requires:
            - prepare-integreat-delivery
      - deliver:
          deliver_to: "integreat"
          requires:
            - await-approval

jobs:
  build:
    parameters:
      build_config:
        description: Which build config to use.
        type: enum
        enum: ["integreat", "integreat-test-cms", "malte"]
    docker:
      - image: circleci/node:12.16.3
    resource_class: small
    environment:
      TOTAL_CPUS: 1 # For resource_class small
      TZ: "Europe/Berlin" # Should be removed in WEBAPP-463
    shell: /bin/bash -eo pipefail
    steps:
      - run:
          name: "Show current CPU count"
          command: |
            echo "CPU count is ${TOTAL_CPUS}"
      - add_ssh_keys:
          fingerprints:
            - "30:f4:98:9f:1c:72:d1:c0:17:9f:57:05:74:a6:44:50"
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - 2-yarn-{{ arch }}-{{ checksum "yarn.lock" }}
            - 2-yarn-{{ arch }}-
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: 2-yarn-{{ arch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - node_modules
      - run:
          name: Check linting
          command: yarn run lint
      - run:
          name: Check flow
          command: yarn run flow:check-now --max-workers ${TOTAL_CPUS}
      - run:
          name: Unit tests
          command: yarn run test --ci --maxWorkers ${TOTAL_CPUS}
      - run:
          name: Test coverage # Results are not used right now. Run it anyway to (possibly) discover more problems.
          command: yarn run test:coverage --ci --maxWorkers ${TOTAL_CPUS}
      - when: # Debug build for integreat-test-cms
          condition:
            equal: [ "integreat-test-cms", << parameters.build_config >> ]
          steps:
            - run:
                name: Debug << parameters.build_config >> build
                command: yarn run webpack --config build/webpack.config.babel.js --env.config_name << parameters.build_config >> --env.debug
      - unless: # Production build for integreat and malte
          condition:
            equal: [ "integreat-test-cms", << parameters.build_config >> ]
          steps:
            - run:
                name: Production << parameters.build_config >> build
                command: yarn run webpack --config build/webpack.config.babel.js --env.config_name << parameters.build_config >> --env.production
      - run:
          name: Check build
          command: yarn run check:built
      - store_artifacts:
          path: dist
      - persist_to_workspace:
          root: ./
          paths:
            - dist
            - node_modules

  prepare-integreat-delivery: # Move release notes, bump version and tag commit
    docker:
      - image: circleci/node:12.16.3
    resource_class: small
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Calculate next version
          command: echo "export NEW_VERSION_NAME=$(build/next-version calc | jq .versionName)" >> ${BASH_ENV}
      - run:
          name: Create jira release # The jira project has to have the same name as the github project. Otherwise this has to be configured.
          command: build/create-jira-release create_release ${NEW_VERSION_NAME} --private-key ${JIRA_PRIVATE_KEY} --access-token ${JIRA_OAUTH_TOKEN} --consumer-key ${JIRA_CONSUMER_KEY} --projectName ${CIRCLE_PROJECT_REPONAME}
      - run:
          name: Move release notes
          command: build/move-release-notes move_to ${NEW_VERSION_NAME} --deliverino-private-key ${DELIVERINO_PRIVATE_KEY} --owner ${CIRCLE_PROJECT_USERNAME} --repo ${CIRCLE_PROJECT_REPONAME} --branch ${CIRCLE_BRANCH} --commit-sha ${CIRCLE_SHA1}
      - run:
          name: Bump version
          command: build/bump-version bump_to ${NEW_VERSION_NAME} --deliverino-private-key ${DELIVERINO_PRIVATE_KEY} --owner ${CIRCLE_PROJECT_USERNAME} --repo ${CIRCLE_PROJECT_REPONAME} --branch ${CIRCLE_BRANCH}

  deliver:
    parameters:
      deliver_to:
        description: Where to deliver to.
        type: enum
        enum: ["integreat", "integreat-test-cms", "malte"]
    docker:
      - image: circleci/node:12.16.3
    resource_class: small
    shell: /bin/bash -eo pipefail
    steps:
      - attach_workspace:
          at: /tmp/output
      - when:
          condition:
            equal: [ "integreat", << parameters.deliver_to >> ]
          steps:
            - run:
                name: Integreat production delivery # StrictHostKeyChecking=no is not a security problem. The worst that could happen is a delivery to the wrong domain.
                command: sftp -v -o StrictHostKeyChecking=no web@web.integreat-app.de:/integreat.app \<<< $'put -r /tmp/output/dist/*'
            - slack/notify:
                message: Integreat WebApp version ${NEW_VERSION_NAME} was delivered successfully to integreat.app!
                webhook: ${SLACK_URL}
      - when:
          condition:
            equal: [ "integreat-test-cms", << parameters.deliver_to >> ]
          steps:
            - run:
                name: Integreat debug delivery
                command: sftp -v -o StrictHostKeyChecking=no web@web.integreat-app.de:/webnext.integreat-app.de \<<< $'put -r /tmp/output/dist/*'
      - when:
          condition:
            equal: [ "malte", << parameters.deliver_to >> ]
          steps:
            - run:
                name: Malte delivery (Nothing here yet) # Will be done in WEBAPP-558
                command: echo "Skip delivery"
