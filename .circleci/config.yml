version: 2.1

parameters:
  api_triggered:
    type: boolean
    description: Whether the pipeline was triggered through the CircleCi API (https://circleci.com/docs/api/v2/?shell#trigger-a-new-pipeline).
    default: false
  production:
    type: boolean
    description: Whether to deploy to production (integreat.app) or not (webnext.integreat-app.de).
    default: false

workflows:
  version: 2
  commit:
    unless: << pipeline.parameters.api_triggered >>
    jobs:
      - build:
          production: false

  api-triggered:
    when: << pipeline.parameters.api_triggered >>
    jobs:
      - build:
          production: << pipeline.parameters.production >>
      - deliver:
          production: << pipeline.parameters.production >>
          requires:
            - build
            - bump_version
      - bump_version # TODO requirements

  bi-weekly-production-release:
    triggers:
      - schedule:
          cron: "0 5 16,21,27 * *" # FIXME "0 5 1,15,28 * *"
          filters:
            branches:
              only:
                - develop
    jobs:
      - build:
          production: true
      - deliver:
          type: approval
          production: true
          requires:
            - build
            - bump_version
      - bump_version

jobs:
  build:
    parameters:
      production:
        description: Whether to build for production.
        type: boolean
    docker: # TOOD environment
      - image: circleci/android:api-28-node
    resource_class: medium
    environment:
      TOTAL_CPUS: 2 # For resource_class medium
      FASTLANE_SKIP_UPDATE_CHECK: true
    shell: /bin/bash -eo pipefail
    steps:
      - run:
          name: "Show current CPU count"
          command: |
            echo "CPU count is ${TOTAL_CPUS}"
      - add_ssh_keys: # Install
          fingerprints:
            - "9a:0f:b1:f0:97:c8:db:3f:be:87:a4:9b:09:7f:d3:af"
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - 2-yarn-{{ arch }}-{{ checksum "yarn.lock" }}
            - 2-yarn-{{ arch }}-
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: 2-yarn-{{ arch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - node_modules
      - run:
          name: Linting check
          command: yarn run lint
      - run:
          name: Flow-type check
          command: yarn run flow:check-now --max-workers $TOTAL_CPUS
      - run:
          name: Unit tests
          command: yarn run test --ci --maxWorkers $TOTAL_CPUS
      - when:
          condition: <<parameters.production>>
          name: Production Build
          command: yarn run build
      - unless:
          condition: <<parameters.production>>
          name: Debug Build
          command: yarn run build:debug
      - store_artifacts:
          path: dist/
      - persist_to_workspace:
          root: dist/
          paths:
            - *

  deliver:
    parameters:
      production:
        description: Whether to release to production.
        type: boolean
    docker:
      - image: circleci/android:api-28-node
    resource_class: small
    shell: /bin/bash -eo pipefail
    environment: # TODO environment
      FASTLANE_SKIP_UPDATE_CHECK: true
      TOTAL_CPUS: 1 # For resource_class small
    steps:
      - run:
          name: "Show current CPU count"
          command: |
            echo "CPU count is ${TOTAL_CPUS}"
      - run: 'curl -sL https://sentry.io/get-cli/ | bash'
      - checkout
      - attach_workspace:
          at: /tmp/output
      - restore_cache:
          keys:
            - 1-gems-{{ arch }}-{{ checksum "Gemfile.lock" }}
            - 1-gems-{{ arch }}-
      - run:
          command: bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: 1-gems-{{ arch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - 2-yarn-{{ arch }}-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: 2-yarn-{{ arch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - node_modules
      - run:
          name: Fastlane Browserstack Upload Live
          command: bundle exec fastlane android browserstack_upload_live
      - run:
          name: Fastlane Play Store Upload
          command: bundle exec fastlane android playstore_upload production:"<< parameters.production >>"
      - run:
          name: Fastlane Upload to Sentry
          command: bundle exec fastlane android sentry_upload
      - run:
          name: Notify
          command: bundle exec fastlane android notify_release

  deliver_ios:
    parameters:
      production:
        description: Whether to release to production.
        type: boolean
    macos:
      xcode: 11.2.0
    environment:
      FASTLANE_SKIP_UPDATE_CHECK: true
      TOTAL_CPUS: 4 # For mac with resource_class medium
    shell: /bin/bash --login -o pipefail
    steps:
      - run:
          name: "Show current CPU count"
          command: |
            echo "CPU count is ${TOTAL_CPUS}"
      - run: 'curl -sL https://sentry.io/get-cli/ | bash'
      - checkout
      - attach_workspace:
          at: /tmp/output
      - restore_cache:
          keys:
            - 1-gems-{{ arch }}-{{ checksum "Gemfile.lock" }}
            - 1-gems-{{ arch }}-
      - run:
          command: bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: 1-gems-{{ arch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Ruby version
          command: ruby --version
      - run:
          name: Fastlane Browserstack Upload Live
          command: bundle exec fastlane ios browserstack_upload_live
      - when:
          condition: <<parameters.production>>
          steps:
            - run:
                name: Fastlane App Store Connect Upload
                command: bundle exec fastlane ios appstoreconnect_upload
      - unless:
          condition: <<parameters.production>>
          steps:
            - run:
                name: Fastlane TestFlight Upload
                command: bundle exec fastlane ios testflight_upload
      - run:
          name: Fastlane Upload to Sentry
          command: bundle exec fastlane ios sentry_upload
      - run:
          name: Notify
          command: bundle exec fastlane ios notify_release

  e2e:
    docker:
      - image: circleci/android:api-28-node
    resource_class: small
    shell: /bin/bash -eo pipefail
    environment:
      FASTLANE_SKIP_UPDATE_CHECK: true
      TOTAL_CPUS: 1 # For resource_class small
    steps:
      - run:
          name: "Show current CPU count"
          command: |
            echo "CPU count is ${TOTAL_CPUS}"
      - checkout
      - attach_workspace:
          at: /tmp/output
      - restore_cache:
          keys:
            - 1-gems-{{ arch }}-{{ checksum "Gemfile.lock" }}
            - 1-gems-{{ arch }}-
      - run:
          command: bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: 1-gems-{{ arch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - 2-yarn-{{ arch }}-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: 2-yarn-{{ arch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - node_modules
      - run:
          name: Fastlane E2E Tests on Browserstack
          command: bundle exec fastlane android browserstack_e2e_tests
      - run:
          name: Fastlane E2E Tests on Browserstack
          command: bundle exec fastlane ios browserstack_e2e_tests

  bump_version:
    docker:
      - image: circleci/android:api-28-node
    resource_class: small
    shell: /bin/bash -eo pipefail
    environment:
      FASTLANE_SKIP_UPDATE_CHECK: true
    steps:
      - checkout
      - restore_cache:
          keys:
            - 1-gems-{{ arch }}-{{ checksum "Gemfile.lock" }}
            - 1-gems-{{ arch }}-
      - run:
          command: bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: 1-gems-{{ arch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Bump version
          command: bundle exec fastlane github_bump_version

