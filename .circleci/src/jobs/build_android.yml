parameters:
  build_for_delivery:
    description: Whether builds are delivered to the store. If true, integreat and malte builds are created.
    type: boolean
docker:
  - image: circleci/android:api-28-node
resource_class: medium
environment:
  TOTAL_CPUS: 2 # For resource_class medium, used in metro.config.ci.js.
  FASTLANE_SKIP_UPDATE_CHECK: true
shell: /bin/bash -eo pipefail
steps:
  - checkout
  - attach_workspace:
      at: .
  - restore_environment_variables
  - restore_cache:
      keys:
        - 2-gems-{{ arch }}-{{ checksum "android/Gemfile.lock" }}
        - 2-gems-{{ arch }}-
  - run:
      command: bundle check || bundle install --path vendor/bundle
      working_directory: android
  - save_cache:
      key: 2-gems-{{ arch }}-{{ checksum "android/Gemfile.lock" }}
      paths:
        - android/vendor/bundle
  - restore_yarn_cache
  - run:
      name: "[FL] Prepare Android Keystore"
      command: bundle exec fastlane keystore
      working_directory: android
  - restore_cache:
      keys:
        - 1-gradle-{{ checksum "android/build.gradle" }}-{{ checksum "android/app/build.gradle" }}-{{ checksum "android/settings.gradle" }}
        - 1-gradle-
  - run:
      name: "[FL] Download Dependencies"
      command: bundle exec fastlane dependencies
      working_directory: android
  - save_cache:
      paths:
        - ~/.gradle
      key: 1-gradle-{{ checksum "android/build.gradle" }}-{{ checksum "android/app/build.gradle" }}-{{ checksum "android/settings.gradle" }}
  - run:
      name: Create output dir
      command: mkdir --parents android/output/apk
  - when:
      condition: << parameters.build_for_delivery >>
      steps:
        - run:
            name: "[FL] integreat build"
            command: ./gradlew clean && bundle exec fastlane build version_name:${NEW_VERSION_NAME} version_code:${NEW_VERSION_CODE} build_config_name:integreat
            working_directory: android
        - run:
            name: Rename apk
            command: mv android/app/build/outputs/apk/release/app-release.apk android/output/apk/integreat.apk
        - run:
            name: Rename sourcemap
            command: mv android/app/build/generated/sourcemaps/react/release/index.android.bundle.map android/output/integreat.android.bundle.map
        - run:
            name: "[FL] malte build"
            command: ./gradlew clean && bundle exec fastlane build version_name:${NEW_VERSION_NAME} version_code:${NEW_VERSION_CODE} build_config_name:malte
            working_directory: android
        - run:
            name: Rename apk
            command: mv android/app/build/outputs/apk/release/app-release.apk android/output/apk/malte.apk
        - run:
            name: Rename sourcemap
            command: mv android/app/build/generated/sourcemaps/react/release/index.android.bundle.map android/output/malte.android.bundle.map
  - run:
      name: "[FL] integreat-e2e build"
      command: ./gradlew clean && bundle exec fastlane build version_name:${NEW_VERSION_NAME} version_code:${NEW_VERSION_CODE} build_config_name:integreat-e2e
      working_directory: android
  - run:
      name: Rename apk
      command: mv android/app/build/outputs/apk/release/app-release.apk android/output/apk/integreat-e2e.apk
  - store_artifacts:
      path: android/output/apk
  - when:
      condition: << parameters.build_for_delivery >>
      steps:
        - persist_to_workspace:
            root: android/output
            paths:
              - integreat.android.bundle.map
              - malte.android.bundle.map
  - persist_to_workspace:
      root: android/output/apk
      paths:
        - integreat.apk
        - malte.apk
        - integreat-e2e.apk
  - notify_failed
