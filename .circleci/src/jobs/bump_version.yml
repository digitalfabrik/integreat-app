# First step of a new delivery. Bump version name and code, tag the commit and (only for production) create a jira release.
parameters:
  delivery:
    description: Which type of delivery is made. If none, the bumped version is not committed.
    type: enum
    enum: [none, development, production]
    default: none
docker:
  - image: circleci/node:12.16.3
resource_class: small
steps:
  - checkout
  - restore_yarn_cache
  - run:
      name: Calculate next version name
      command: echo "export NEW_VERSION_NAME=$(tools/next-version calc | jq .versionName)" >> environment_variables
  - run:
      name: Calculate next version code
      command: echo "export NEW_VERSION_CODE=$(tools/next-version calc | jq .versionCode)" >> environment_variables
  - run:
      name: Set environment varibales
      command: cat environment_variables >> ${BASH_ENV}
  - unless:
      condition:
        equal: [ none, << parameters.delivery >>]
      steps:
        - run:
            name: Bump git version
            command: tools/git-version bump-to ${NEW_VERSION_NAME} ${NEW_VERSION_CODE} --deliverino-private-key ${DELIVERINO_PRIVATE_KEY} --owner ${CIRCLE_PROJECT_USERNAME} --repo ${CIRCLE_PROJECT_REPONAME} --branch ${CIRCLE_BRANCH}
  - when:
      condition:
        equal: [ production, << parameters.delivery >>]
      steps:
        - run:
            name: Create jira release # The jira project has to have the same name as the github project. Otherwise this has to be configured.
            command: tools/create-jira-release create-release ${NEW_VERSION_NAME} --private-key ${JIRA_PRIVATE_KEY} --access-token ${JIRA_OAUTH_TOKEN} --consumer-key ${JIRA_CONSUMER_KEY} --project-name ${CIRCLE_PROJECT_REPONAME}
  - persist_to_workspace:
      root: ./
      paths:
        - environment_variables
  - notify_failed
