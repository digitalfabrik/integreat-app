# Create a release (with release notes) on github and send a mattermost notification.
parameters:
  production_delivery:
    description: Whether builds are delivered to the production store. If set to true, jira and github releases are created.
    type: boolean
docker:
  - image: circleci/node:12.16.3
resource_class: small
steps:
  - skip_job
  - checkout
  - prepare_workspace
  - restore_environment_variables
  - restore_yarn_tools_cache
  - run:
      name: Prepare artifact urls
      command: echo "export IOS_ARTIFACT_URLS='$(echo $(cat $(ls | grep ipa-url)))'" >> ${BASH_ENV}
      working_directory: ~/attached_workspace
  - run:
      name: Create github release
      command: tools/github-release create ios ${NEW_VERSION_NAME} ${NEW_VERSION_CODE} --deliverino-private-key ${DELIVERINO_PRIVATE_KEY} --owner ${CIRCLE_PROJECT_USERNAME} --repo ${CIRCLE_PROJECT_REPONAME} --release-notes "$(tools/parse-release-notes parse --ios --language en)"<<^ parameters.production_delivery >> --development-release<</ parameters.production_delivery >> --download-links "${IOS_ARTIFACT_URLS}"
  - run:
      name: Create release notes
      command: echo "export RELEASE_NOTES=$(tools/parse-release-notes parse --ios --language en)" >> ${BASH_ENV}
  - notify:
      success_message: <<^ parameters.production_delivery >>[Development] <</ parameters.production_delivery >>Integreat, Malte and Aschaffenburg ${NEW_VERSION_NAME} have been released successfully on iOS!\n${RELEASE_NOTES}\n${IOS_ARTIFACT_URLS}
      channel: integreat-releases
