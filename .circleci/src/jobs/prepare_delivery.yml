parameters:
  production_delivery:
    description: Whether builds are delivered to the production store. If set to true, jira and github releases are created.
    type: boolean
docker:
  - image: circleci/node:12.16.3
resource_class: small
steps:
  - checkout
  - attach_workspace:
      at: .
  - restore_environment_variables
  - restore_cache:
      name: Restore Yarn Package Cache
      keys:
        - 3-yarn-{{ arch }}-{{ checksum "yarn.lock" }}
        - 3-yarn-{{ arch }}-
  - run:
      name: Install Dependencies
      command: yarn install --frozen-lockfile
  - save_cache:
      name: Save Yarn Package Cache
      key: 3-yarn-{{ arch }}-{{ checksum "yarn.lock" }}
      paths:
        - ~/.cache/yarn
        - node_modules
  - when:
      condition: << parameters.production_delivery >>
      steps:
        - run:
            name: Create jira release # The jira project has to have the same name as the github project. Otherwise this has to be configured.
            command: tools/create-jira-release create-release ${NEW_VERSION_NAME} --private-key ${JIRA_PRIVATE_KEY} --access-token ${JIRA_OAUTH_TOKEN} --consumer-key ${JIRA_CONSUMER_KEY} --project-name ${CIRCLE_PROJECT_REPONAME}
        - run:
            name: Move release notes
            command: tools/move-release-notes move-to ${NEW_VERSION_NAME} --deliverino-private-key ${DELIVERINO_PRIVATE_KEY} --owner ${CIRCLE_PROJECT_USERNAME} --repo ${CIRCLE_PROJECT_REPONAME} --branch ${CIRCLE_BRANCH} --commit-sha ${CIRCLE_SHA1}
  - run:
      name: Bump version
      command: tools/bump-version bump-to ${NEW_VERSION_NAME} ${NEW_VERSION_CODE} --deliverino-private-key ${DELIVERINO_PRIVATE_KEY} --owner ${CIRCLE_PROJECT_USERNAME} --repo ${CIRCLE_PROJECT_REPONAME} --branch ${CIRCLE_BRANCH} <<# parameters.production_delivery >> --release-candidate <</ parameters.production_delivery >>