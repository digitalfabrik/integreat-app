# Create a release (with release notes) on github and send a mattermost notification.
parameters:
  production_delivery:
    description: Whether builds are delivered to production or beta.
    type: boolean
docker:
  - image: cimg/node:20.12.1
resource_class: small
steps:
  - checkout
  - skip_job
  - prepare_workspace
  - restore_environment_variables
  - restore_yarn_tools_cache
  - run:
      name: Create github release
      command: yarn github-release create web ${NEW_VERSION_NAME} ${NEW_VERSION_CODE} --production-delivery << parameters.production_delivery >> --deliverino-private-key ${DELIVERINO_PRIVATE_KEY} --owner ${CIRCLE_PROJECT_USERNAME} --repo ${CIRCLE_PROJECT_REPONAME} --release-notes "$(yarn --silent manage-metadata parse-release-notes --web --language en)"
      working_directory: tools
  - run:
      name: Create release notes
      command: echo "export RELEASE_NOTES=$(yarn --silent --cwd tools manage-metadata parse-release-notes --web --language en)" >> ${BASH_ENV}
  - when:
      condition: << parameters.production_delivery >>
      steps:
        - notify:
            success_message: WebApp version ${NEW_VERSION_NAME} was delivered successfully to integreat.app, malteapp.de, aschaffenburg.app and netzwerkobdachwohnen.de!\n${RELEASE_NOTES}
            channel: releases
  - unless:
      condition: << parameters.production_delivery >>
      steps:
        - notify:
            success_message: "[Beta] WebApp version ${NEW_VERSION_NAME} was delivered successfully to beta.integreat.app, beta.malteapp.de, beta.aschaffenburg.app and beta.netzwerkobdachwohnen.de!\n${RELEASE_NOTES}"
            channel: releases
            only_for_branch: ${CIRCLE_BRANCH}
