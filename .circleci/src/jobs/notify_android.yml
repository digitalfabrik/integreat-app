# Create a release (with release notes) on github and send a mattermost notification.
parameters:
  production_delivery:
    description: Whether builds are delivered to the production or beta lane of the play store.
    type: boolean
docker:
  - image: cimg/node:20.17.0
resource_class: small
steps:
  - checkout
  - prepare_workspace
  - restore_environment_variables
  - run:
      name: Prepare artifact urls
      command: echo "export ANDROID_ARTIFACT_URLS='$(echo $(cat $(ls | grep apk-url)))'" >> ${BASH_ENV}
      working_directory: ~/attached_workspace
  - run:
      name: Create github release
      command: echo "export ANDROID_RELEASE_ID='$(yarn --silent app-toolbelt v0 release create android ${NEW_VERSION_NAME} ${NEW_VERSION_CODE} --production-release << parameters.production_delivery >> --deliverino-private-key ${DELIVERINO_PRIVATE_KEY} --owner ${CIRCLE_PROJECT_USERNAME} --repo ${CIRCLE_PROJECT_REPONAME} --release-notes "$(yarn --silent app-toolbelt v0 release-notes parse-release-notes --android --language en)")'" >> ${BASH_ENV}
      working_directory: .
  - run:
      name: Upload apks to github release
      command: yarn app-toolbelt v0 release upload --releaseId ${ANDROID_RELEASE_ID} --files "$(ls ~/attached_workspace/*.apk)" --deliverino-private-key ${DELIVERINO_PRIVATE_KEY} --owner ${CIRCLE_PROJECT_USERNAME} --repo ${CIRCLE_PROJECT_REPONAME}
      working_directory: .
  - run:
      name: Create release notes
      command: echo "export RELEASE_NOTES=$(yarn --silent --cwd . app-toolbelt v0 release-notes parse-release-notes --android --language en)" >> ${BASH_ENV}
  - notify:
      success_message: <<^ parameters.production_delivery >>[Beta] <</ parameters.production_delivery >>Integreat, Malte and Aschaffenburg ${NEW_VERSION_NAME} have been released successfully on Android!\n${RELEASE_NOTES}\n${ANDROID_ARTIFACT_URLS}
      channel: releases
      only_for_branch: ${CIRCLE_BRANCH}
