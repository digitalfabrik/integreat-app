require 'yaml'

#
# `options` contains several parameter:
#
# version_code: The new version code
# version_name: The new version name
# package_name: The name of the app in Sentry
# sourcemap_path: The path to the sourcemap file to upload
desc "Upload a source map to Sentry"
private_lane :generic_sentry_upload do |options|
  ensure_env_vars(
      env_vars: ['SENTRY_AUTH_TOKEN']
  )

  version_code = options[:version_code]
  version_name = options[:version_name]
  package_name = options[:package_name]
  sourcemap_path = options[:sourcemap_path]

  sentry_create_release(
      version: version_name,
      app_identifier: package_name,
      finalize: true
  )

  sentry_upload_sourcemap(
      version: version_name,
      app_identifier: package_name,
      dist: version_code.to_s,
      sourcemap: sourcemap_path,
      rewrite: true
  )
end

platform :android do
  desc "Upload the APK to BrowserStack Live"
  lane :browserstack_upload_live do
    ensure_env_vars(
        env_vars: ['BROWSERSTACK_USERNAME', 'BROWSERSTACK_ACCESS_KEY']
    )

    upload_to_browserstack_app_live(
        browserstack_username: ENV["BROWSERSTACK_USERNAME"],
        browserstack_access_key: ENV["BROWSERSTACK_ACCESS_KEY"],
        file_path: "/tmp/output/app-release.apk"
    )
  end

  desc "Upload the APK and run E2E tests on BrowserStack"
  lane :browserstack_e2e_tests do
    ensure_env_vars(
        env_vars: ['BROWSERSTACK_USERNAME', 'BROWSERSTACK_ACCESS_KEY']
    )

    upload_to_browserstack_app_automate(
        browserstack_username: ENV["BROWSERSTACK_USERNAME"],
        browserstack_access_key: ENV["BROWSERSTACK_ACCESS_KEY"],
        file_path: "/tmp/output/app-release.apk"
    )

    ENV["E2E_CONFIG"] = 'browserstack_ci_android'
    ENV["E2E_BROWSERSTACK_USER"] = ENV["BROWSERSTACK_USERNAME"]
    ENV["E2E_BROWSERSTACK_KEY"] = ENV["BROWSERSTACK_ACCESS_KEY"]
    ENV["E2E_BROWSERSTACK_APP"] = lane_context[SharedValues::BROWSERSTACK_APP_ID]

    yarn(
        command: "test:e2e",
        package_path: "package.json"
    )
  end

  desc "Upload the JavaScript source map to Sentry"
  lane :sentry_upload do |options|
    version_code = options[:version_code]
    version_name = options[:version_name]

    generic_sentry_upload(
        package_name: 'tuerantuer.app.integreat',
        sourcemap_path: '/tmp/output/index.android.bundle.map',
        version_name: version_name,
        version_code: version_code
    )
  end

  desc "Deliver the app to Play Store. Depending on the option `production` the update is released to the general public."
  lane :playstore_upload do |options|
    version_code = options[:version_code]
    version_name = options[:version_name]

    ensure_env_vars(
        env_vars: ['GOOGLE_SERVICE_ACCOUNT_JSON']
    )

    track = options[:production] === true ? 'production' : 'beta'

    # https://docs.fastlane.tools/actions/supply/
    upload_to_play_store(
        version_code: version_code,
        version_name: version_name,
        package_name: "tuerantuer.app.integreat",
        metadata_path: "./android/fastlane/metadata/android",
        track: track,
        skip_upload_changelogs: false,
        skip_upload_images: false,
        skip_upload_screenshots: false,
        skip_upload_metadata: false,
        release_status: "draft",  # TODO: change to `completed` if we are sure CD works
        apk: '/tmp/output/app-release.apk',
        json_key_data: ENV["GOOGLE_SERVICE_ACCOUNT_JSON"]
    )
  end
end

platform :ios do

  desc "Upload the IPA to BrowserStack Live"
  lane :browserstack_upload_live do
    ensure_env_vars(
        env_vars: ['BROWSERSTACK_USERNAME', 'BROWSERSTACK_ACCESS_KEY']
    )

    upload_to_browserstack_app_live(
        browserstack_username: ENV["BROWSERSTACK_USERNAME"],
        browserstack_access_key: ENV["BROWSERSTACK_ACCESS_KEY"],
        file_path: "/tmp/output/Integreat.ipa"
    )
  end

  desc "Upload the APK and run E2E tests on BrowserStack"
  lane :browserstack_e2e_tests do
    ensure_env_vars(
        env_vars: ['BROWSERSTACK_USERNAME', 'BROWSERSTACK_ACCESS_KEY']
    )

    upload_to_browserstack_app_automate(
        browserstack_username: ENV["BROWSERSTACK_USERNAME"],
        browserstack_access_key: ENV["BROWSERSTACK_ACCESS_KEY"],
        file_path: "/tmp/output/Integreat.ipa"
    )

    ENV["E2E_CONFIG"] = 'browserstack_ci_ios'
    ENV["E2E_BROWSERSTACK_USER"] = ENV["BROWSERSTACK_USERNAME"]
    ENV["E2E_BROWSERSTACK_KEY"] = ENV["BROWSERSTACK_ACCESS_KEY"]
    ENV["E2E_BROWSERSTACK_APP"] = lane_context[SharedValues::BROWSERSTACK_APP_ID]
    yarn(
        command: "test:e2e",
        package_path: "package.json"
    )
  end

  desc "Upload source map to Sentry"
  lane :sentry_upload do |options|
    version_code = options[:version_code]
    version_name = options[:version_name]

    generic_sentry_upload(
        package_name: 'de.integreat-app',
        sourcemap_path: '/tmp/output/index.ios.bundle.map',
        version_code: version_code,
        version_name: version_name
    )
  end

  desc "Deliver the app to App Store Connect. The app is submitted for review and released automatically."
  lane :appstoreconnect_upload do |options|
    ensure_env_vars(
        env_vars: ['FASTLANE_USER', 'FASTLANE_PASSWORD']
    )

    version_name = options[:version_name]

    # https://docs.fastlane.tools/actions/deliver/
    deliver(
        ipa: "/tmp/output/Integreat.ipa",
        app_version: version_name,
        submit_for_review: true,
        automatic_release: true,
        force: true,
        skip_screenshots: false,
        skip_metadata: false,
        skip_app_version_update: false,
        metadata_path: "./ios/fastlane/metadata",
        screenshots_path: "./ios/fastlane/screenshots",
        precheck_include_in_app_purchases: false # We do not have inapp purchases
    )
  end

  desc "Deliver the app to TestFlight for testers"
  lane :testflight_upload do
    ensure_env_vars(
        env_vars: ['FASTLANE_USER', 'FASTLANE_PASSWORD']
    )

    # https://docs.fastlane.tools/actions/upload_to_testflight/
    upload_to_testflight(
        skip_waiting_for_build_processing: true,
        apple_id: "1072353915",
        ipa: "/tmp/output/Integreat.ipa",
        distribute_external: false
    )
  end
end
