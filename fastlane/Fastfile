fastlane_version "2.156.1"

require "yaml"
require_relative "read_build_config"

# The following parameters have to be passed:
# version_code: The version code of the app
# version_name: The version name of the app
# package_name: The name of the app in Sentry
# sourcemap_path: The path to the sourcemap file to upload
desc "Upload source map to Sentry"
private_lane :generic_sentry_upload do |options|
  ensure_env_vars(
      env_vars: ["SENTRY_AUTH_TOKEN"]
  )

  version_code = options[:version_code]
  version_name = options[:version_name]
  package_name = options[:package_name]
  sourcemap_path = options[:sourcemap_path]

  sentry_create_release(
      version: version_name,
      app_identifier: package_name,
      finalize: true
  )

  sentry_upload_sourcemap(
      version: version_name,
      app_identifier: package_name,
      dist: version_code.to_s,
      sourcemap: sourcemap_path,
      rewrite: true
  )
end

platform :android do
  # The following parameters have to be passed:
  # app_name: The name of the app
  desc "Upload the APK to BrowserStack Live"
  lane :browserstack_upload_live do |options|
    ensure_env_vars(
        env_vars: ["BROWSERSTACK_USERNAME", "BROWSERSTACK_ACCESS_KEY"]
    )

    app_name = options[:app_name]

    upload_to_browserstack_app_live(
        browserstack_username: ENV["BROWSERSTACK_USERNAME"],
        browserstack_access_key: ENV["BROWSERSTACK_ACCESS_KEY"],
        file_path: "./#{app_name}.apk"
    )
  end

  # The following parameters have to be passed:
  # app_name: The name of the app
  desc "Upload the APK and run E2E tests on BrowserStack"
  lane :browserstack_e2e_tests do |options|
    ensure_env_vars(
        env_vars: ["BROWSERSTACK_USERNAME", "BROWSERSTACK_ACCESS_KEY"]
    )

    app_name = options[:app_name]

    upload_to_browserstack_app_automate(
        browserstack_username: ENV["BROWSERSTACK_USERNAME"],
        browserstack_access_key: ENV["BROWSERSTACK_ACCESS_KEY"],
        file_path: "./#{app_name}.apk"
    )

    ENV["E2E_CONFIG"] = "browserstack_ci_android"
    ENV["E2E_BROWSERSTACK_USER"] = ENV["BROWSERSTACK_USERNAME"]
    ENV["E2E_BROWSERSTACK_KEY"] = ENV["BROWSERSTACK_ACCESS_KEY"]
    ENV["E2E_BROWSERSTACK_APP"] = lane_context[SharedValues::BROWSERSTACK_APP_ID]

    yarn(
        command: "test:e2e",
        package_path: "package.json"
    )
  end

  # The following parameters have to be passed:
  # version_code: The version code of the app
  # version_name: The version name of the app
  # app_name: The name of the app
  desc "Upload the JavaScript source map to Sentry"
  lane :sentry_upload do |options|
    version_code = options[:version_code]
    version_name = options[:version_name]
    app_name = options[:app_name]
    build_config_name = options[:build_config_name]

    build_config = read_build_config(build_config_name)

    generic_sentry_upload(
        package_name: build_config['android']['applicationId'],
        sourcemap_path: "./#{app_name}.android.bundle.map",
        version_name: version_name,
        version_code: version_code
    )
  end

  # The following parameters have to be passed:
  # version_code: The version code of the app
  # version_name: The version name of the app
  # app_name: The name of the app
  desc "Deliver the app to Play Store. Depending on the option `production_delivery` the update is released to the general public."
  lane :playstore_upload do |options|
    version_code = options[:version_code]
    version_name = options[:version_name]
    app_name = options[:app_name]
    build_config_name = options[:build_config_name]

    build_config = read_build_config(build_config_name)

    ensure_env_vars(
        env_vars: ["GOOGLE_SERVICE_ACCOUNT_JSON"]
    )

    track = options[:production_delivery] === true ? "production" : "beta"

    # https://docs.fastlane.tools/actions/supply/
    upload_to_play_store(
        version_code: version_code,
        version_name: version_name,
        package_name: build_config['android']['applicationId'],
        metadata_path: "./android/fastlane/metadata/android",
        track: track,
        skip_upload_changelogs: false,
        skip_upload_images: false,
        skip_upload_screenshots: false,
        skip_upload_metadata: false,
        release_status: "completed",
        apk: "./#{app_name}.apk",
        json_key_data: ENV["GOOGLE_SERVICE_ACCOUNT_JSON"]
    )
  end
end

platform :ios do
  # The following parameters have to be passed:
  # app_name: The name of the app
  desc "Upload the IPA to BrowserStack Live"
  lane :browserstack_upload_live do |options|
    ensure_env_vars(
        env_vars: ["BROWSERSTACK_USERNAME", "BROWSERSTACK_ACCESS_KEY"]
    )

    app_name = options[:app_name]

    upload_to_browserstack_app_live(
        browserstack_username: ENV["BROWSERSTACK_USERNAME"],
        browserstack_access_key: ENV["BROWSERSTACK_ACCESS_KEY"],
        file_path: "./#{app_name}.ipa"
    )
  end

  # The following parameters have to be passed:
  # app_name: The name of the app
  desc "Upload the APK and run E2E tests on BrowserStack"
  lane :browserstack_e2e_tests do |options|
    ensure_env_vars(
        env_vars: ["BROWSERSTACK_USERNAME", "BROWSERSTACK_ACCESS_KEY"]
    )

    app_name = options[:app_name]

    upload_to_browserstack_app_automate(
        browserstack_username: ENV["BROWSERSTACK_USERNAME"],
        browserstack_access_key: ENV["BROWSERSTACK_ACCESS_KEY"],
        file_path: "./#{app_name}.ipa"
    )

    ENV["E2E_CONFIG"] = "browserstack_ci_ios"
    ENV["E2E_BROWSERSTACK_USER"] = ENV["BROWSERSTACK_USERNAME"]
    ENV["E2E_BROWSERSTACK_KEY"] = ENV["BROWSERSTACK_ACCESS_KEY"]
    ENV["E2E_BROWSERSTACK_APP"] = lane_context[SharedValues::BROWSERSTACK_APP_ID]
    yarn(
        command: "test:e2e",
        package_path: "package.json"
    )
  end

  # The following parameters have to be passed:
  # version_code: The version code of the app
  # version_name: The version name of the app
  # app_name: The name of the app
  desc "Upload source map to Sentry"
  lane :sentry_upload do |options|
    version_code = options[:version_code]
    version_name = options[:version_name]
    app_name = options[:app_name]
    build_config_name = options[:build_config_name]

    build_config = read_build_config(build_config_name)

    generic_sentry_upload(
        package_name: build_config['ios']['bundleIdentifier'],
        sourcemap_path: "./#{app_name}.ios.bundle.map",
        version_code: version_code,
        version_name: version_name
    )
  end

  # The following parameters have to be passed:
  # version_name: The version name of the app
  # app_name: The name of the app
  desc "Deliver the app to App Store Connect. The app is submitted for review and released automatically."
  lane :appstoreconnect_upload do |options|
    ensure_env_vars(
        env_vars: ["FASTLANE_USER", "FASTLANE_PASSWORD"]
    )

    version_name = options[:version_name]
    app_name = options[:app_name]

    # https://docs.fastlane.tools/actions/deliver/
    deliver(
        ipa: "./#{app_name}.ipa",
        app_version: version_name,
        submit_for_review: true,
        automatic_release: true,
        force: true,
        skip_screenshots: false,
        skip_metadata: false,
        skip_app_version_update: false,
        metadata_path: "./ios/fastlane/metadata",
        screenshots_path: "./ios/fastlane/screenshots",
        precheck_include_in_app_purchases: false, # We do not have inapp purchases
        submission_information: { add_id_info_uses_idfa: false }  # https://firebase.google.com/docs/analytics/configure-data-collection?platform=ios
                                                                  # https://support.google.com/firebase/answer/6318039?hl=en
    )
  end

  # The following parameters have to be passed:
  # app_name: The name of the app
  desc "Deliver the app to TestFlight for testers"
  lane :testflight_upload do |options|
    ensure_env_vars(
        env_vars: ["FASTLANE_USER", "FASTLANE_PASSWORD"]
    )

    app_name = options[:app_name]

    # https://docs.fastlane.tools/actions/upload_to_testflight/
    upload_to_testflight(
        skip_waiting_for_build_processing: true,
        apple_id: "1072353915",
        ipa: "./#{app_name}.ipa",
        distribute_external: false
    )
  end
end
